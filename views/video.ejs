<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>VideoCall</title>
  	<!--Import Google Icon Font-->
    <link href="http://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  	<!--Import materialize.css-->
  	<link href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/css/materialize.css" type="text/css" rel="stylesheet" media="screen,projection"/>
    <!--Import jQuery before materialize.js-->
    <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/js/materialize.js"></script>
    <!--Let browser know website is optimized for mobile-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <!--Import peerjs -->
    <script src="http://cdn.peerjs.com/0.3/peer.js"></script>
  	<!-- Import custom css and js -->
  	<link href="css/style.css" rel="stylesheet">
    <script>
      $(function(){
        // some global var. var message will be use later as
        // function sending messages finish
        var messages = [];
        var peer_id, conn;
        var your_id = '<%=user.local.email %>'; console.log(your_id);

        var peer = new Peer( your_id, {
            key: '78flukfdfbcvj9k9',
            debug: 3,
            config: {'iceServers': [
            { url: 'stun:stun1.l.google.com:19302' },
            { url: 'turn:numb.viagenie.ca',
              credential: 'muazkh', username: 'webrtc@live.com' }
            ]}
          });

        //generate the id the connection
        peer.on('open', function(){
          $('#id').text(peer.id);
          console.log(peer.socket.disconnected);
        });

        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        function getVideo(callback){
          navigator.getUserMedia({audio: true, video: true}, callback, function(error){
            console.log(error);
            alert('An error occured. Please try again');
          });
        }
        // success callback
        getVideo(function(stream){
          window.localStream = stream;
        // get the stream by video Id defined in client
          onReceiveStream(stream, 'my-camera');
        });

        function onReceiveStream(stream, element_id){
          var video = $('#' + element_id + ' video')[0];
          // create blob objectURl
          video.src = window.URL.createObjectURL(stream);
          window.peer_stream = stream;
        }

      // ***End get video stream, now implement call function***

        $('#call').click(function(){
          peer_id = $('#peer_id').val();

            if(peer_id){
              conn = peer.connect(peer_id, {metadata: {
                'username': your_id
              }});
            }
            console.log('now calling: ' + peer_id);
            console.log(peer);

            //get the target/friend peerID to call
            var call = peer.call(peer_id, window.localStream);
            call.on('stream', function(stream){
              window.peer_stream = stream;
              onReceiveStream(stream, 'peer-camera');
            });

             $('#call').addClass('hidden');
             $('#endcall').removeClass('hidden');
             $('#set-name').removeClass('hidden');
             $('#peer-camera').removeClass('hidden');
        });

        $('#set-name').click(function(){
          peer_id = $('#peer_id').val();
            if(peer_id){
              conn = peer.connect(peer_id, {metadata: {
                'username': your_id
              }});
            }
            console.log('now calling: ' + peer_id);
            console.log(peer);
            //get the target/friend peerID to call
            var call = peer.call(peer_id, window.localStream);
            call.on('stream', function(stream){
              window.peer_stream = stream;
              onReceiveStream(stream, 'peer-camera');
            });
        });

      //start the connection
        peer.on('connection', function(connection){
          conn = connection;
          peer_id = connection.peer;

          $('#peer_id').addClass('hidden').val(peer_id);
          $('#connected_peer_container').removeClass('hidden');
          $('#id-input-field').addClass('hidden');
          $('#connected_peer').text(connection.metadata.username);

          $('#call').addClass('hidden');
          $('#endcall').removeClass('hidden');
          $('#set-name').removeClass('hidden');
          $('#peer-camera').removeClass('hidden');
        });

        peer.on('call', function(call){
          onReceiveCall(call);
        });

      // run received function
        function onReceiveCall(call){
          call.answer(window.localStream);
          call.on('stream', function(stream){
            window.peer_stream = stream;
            onReceiveStream(stream, 'peer-camera');
          });
        }

      //now implement endCall function. close the peer connection
        $("#endcall").click(function(call){
           peer.destroy();
           peer = null;
           window.location.reload();
        })
      // side menus
        $('#button-collapse').sideNav({
            menuWidth: 300, // Default is 240
            edge: 'right', // Choose the horizontal origin
            closeOnClick: true, // Closes side-nav on <a> clicks, useful for Angular/Meteor
            draggable: true // Choose whether you can drag to open on touch screens
          }
        );
      // modal
        $(document).ready(function(){
          // the "href" attribute of .modal-trigger must specify the modal ID that wants to be triggered
          $('.modal').modal();
        });

      });
    </script>
  </head>
  <body>
      <!-- side menu -->
      <ul id="slide-out" class="side-nav">
        <li><div class="userView">
          <div class="background">
            <img src="images/office.jpg">
          </div>
          <a href="#!user"><img class="circle" src="images/yuna.jpg"></a>
          <a href="#!name"><span class="white-text name">John Doe</span></a>
          <a href="#!email"><span class="white-text email">jdandturk@gmail.com</span></a>
        </div></li>
        <li><a href="#!"><i class="material-icons">cloud</i>First Link With Icon</a></li>
        <li><a href="#!">Second Link</a></li>
        <li><div class="divider"></div></li>
        <li><a class="subheader">Subheader</a></li>
        <li><a class="waves-effect" href="#!">Third Link With Waves</a></li>
      </ul>
      <!-- accept, decline call UI -->
      <div id="modal1" class="modal modal-fixed-footer">
        <div class="modal-content">
          <h4>Modal Header</h4>
          <p>A bunch of text</p>
        </div>
        <div class="modal-footer">
          <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat ">Agree</a>
        </div>
      </div>
      <!-- navigation bar -->
      <ul id="dropdown-user" class="dropdown-content">
        <li><a href="/profile">Profile</a></li>
        <li class="divider"></li>
        <li><a href="/logout">Logout</a></li>
      </ul>
      <nav>
        <div class="nav-wrapper blue-grey darken-3 ">
          <a href="" class="brand-logo ">Free2Call</a>
          <ul class="right hide-on-med-and-down">
            <li><button data-target="modal1" class="btn">Modal</button></li>
            <li><a href="" data-activates="slide-out" id="button-collapse"><i class="material-icons">menu</i></a></li>
            <li><a href="/tutorial">Tutorial</a></li>
            <li><a class="dropdown-button" href="/profile" data-activates="dropdown-user">
                <i class="material-icons left">perm_identity</i>
                <span class="bold"> <%=user.local.email %> </span></a>
            </li>
          </ul>
        </div>
      </nav>
      <div class="row">
        <!-- Display the video of the remote peer -->
        <div class="col s6">
            <div class="card white-text">
              <div class="hidden" id="peer-camera">
                <video class="responsive-video" controls autoplay></video>
              </div>
            </div>
        </div>
        <!-- Display the video of the remote peer -->
        <div class="col s3">
          <div class="card white-text">
            <div class="card-content white-text">
              <div class="" id="">
              </div>
            </div>
          </div>
        </div>
        <!-- Display main part of the application -->
        <div class="col s3">
          <div class="card blue-grey darken-3">
            <div class="card-content white-text">
                  <h5 class="light-green-text lighten-1">Share your <a class="white-text">"Username"</a> to Make a Call</h5>

                  <div class="input-field" id="id-input-field">
                    <input id="peer_id" type="text" class="validate">
                    <label for="last_name">Friend's Name</label>
                  </div>
                  <div id="connected_peer_container">
                    Connected to :
                    <span class="light-green-text lighten-1" id="connected_peer"></span>
                  </div>
                </br>
                <div class="card-image">
                  <a id="call" class="btn-floating btn-large waves-effect waves-light light-green darken-1">
                    <i class="material-icons">phone</i>
                  </a>
                  <a id="set-name" class="btn-floating btn-large waves-effect waves-light light-green darken-1 hidden">
                    <i class="material-icons">add</i>
                  </a>
                  <a id="endcall" class="btn-floating btn-large waves-effect waves-light red darken-1 hidden">
                    <i class="material-icons">call_end</i>
                  </a>
                </div>
            </div>
          </div>
          <!-- Display video of the current user -->
          <div>
            <div class="card-content white-text">
              <div id="my-camera">
                <video class="responsive-video" controls autoplay></video>
              </div>
            </div>
          </div>

        </div>
      </div>
  </body>
</html>
